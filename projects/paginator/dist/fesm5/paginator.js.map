{"version":3,"file":"paginator.js.map","sources":["ng://paginator/lib/paginator.service.ts","ng://paginator/lib/paginator.component.ts","ng://paginator/lib/paginator.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaginatorService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-simple-paginator',\n  template: `\n  <div class=\"ngx-paginator-container\">\n      <div class=\"ngx-paginator-page-size\">\n        <div class=\"ngx-paginator-page-size-label\"> Items per page:\n        </div>\n      </div>\n      <div class=\"ngx-paginator-range-actions\">\n        <div class=\"ngx-paginator-range-label\"> {{label}}</div>\n        <div class=\"ngx-dropdown-wrapper\" style=\"width: 2rem; font-size: 12px;\">\n        <ngx-simple-dropdown [positinY]=\"'above'\">\n          <p  dropdownToggle>{{pageSize}}</p>\n          <ul *dropdownMenu class=\"ngx-dropdown-menu\">\n            <button (click)=\"_changePageSize(2)\">2</button>\n            <button (click)=\"_changePageSize(25)\">25</button>\n            <button (click)=\"_changePageSize(100)\">100</button>\n          </ul>\n        </ngx-simple-dropdown>\n      </div>\n        <div class=\"ngx-paginator-range-actions-btns\">\n         <button [disabled]=\"!hasPreviousPage()\" (click)=\"previousPage()\">\n          <svg class=\"ngx-paginator-icon left\" focusable=\"false\" viewBox=\"0 0 24 24\">\n          <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" fill=\"rgba(0, 0, 0, 0.54)\"></path></svg>\n         </button>\n         <button [disabled]=\"!hasNextPage()\" (click)=\"nextPage()\">\n          <svg class=\"ngx-paginator-icon right\" focusable=\"false\" viewBox=\"0 0 24 24\">\n          <path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\" fill=\"rgba(0, 0, 0, 0.54)\"></path></svg>\n         </button>\n        </div>\n     </div>\n  </div>\n  `,\n  styleUrls: ['./paginator.component.scss']\n})\nexport class PaginatorComponent implements OnInit {\n  @Input()  get length() {return this._length; }\n            set length(value: number) { this._length = +value ; }\n  @Input()  get pageSize() {return this._pageSize; }\n            set pageSize(value: number) { this._pageSize = +value; }\n  @Output() page = new EventEmitter();\n  pageIndex = 0;\n  private _length: number;\n  private _pageSize: number;\n  constructor() { }\n\n  ngOnInit() {\n  }\n  get label() {return this.getRangeLabel(this.pageIndex, this._pageSize, this._length); }\n  getRangeLabel (pageIndex: number, pageSize: number, length: number)  {\n    if (length === 0 || pageSize === 0) { return `0 of ${length}`; }\n\n    length = Math.max(length, 0);\n\n    const startIndex = pageIndex * pageSize;\n\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ?\n        Math.min(startIndex + pageSize, length) :\n        startIndex + pageSize;\n\n    return `${startIndex + 1} - ${endIndex} of ${length}`;\n  }\n  onSelect(e) {console.log(e)}\n    /** Whether there is a previous page. */\n    hasPreviousPage(): boolean {\n      return this.pageIndex >= 1 && this.pageSize !== 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage(): boolean {\n      const numberOfPages = this.getNumberOfPages();\n      return this.pageIndex < numberOfPages && this.pageSize !== 0;\n    }\n     /** Calculate the number of pages */\n    getNumberOfPages(): number {\n      return Math.ceil(this.length / this.pageSize) - 1;\n    }\n      /** Advances to the next page if it exists. */\n  nextPage(): void {\n    if (!this.hasNextPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex++;\n    this._emitPageEvent(previousPageIndex);\n  }\n\n  /** Move back to the previous page if it exists. */\n  previousPage(): void {\n    if (!this.hasPreviousPage()) { return; }\n\n    const previousPageIndex = this.pageIndex;\n    this.pageIndex--;\n    this._emitPageEvent(previousPageIndex);\n  }\n private  _emitPageEvent(previousPageIndex: number) {\n    this.page.emit({\n      previousPageIndex,\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\n  _changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const startIndex = this.pageIndex * this.pageSize;\n    const previousPageIndex = this.pageIndex;\n\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n    this.pageSize = pageSize;\n    this._emitPageEvent(previousPageIndex);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PaginatorComponent } from './paginator.component';\nimport { NgxDropdownModule } from 'ngx-simple-dropdown';\n// import { NgxDropdownModule } from 'projects/dropdown/src/lib/dropdown.module';\n\n@NgModule({\n  imports: [\n    NgxDropdownModule\n  ],\n  declarations: [PaginatorComponent],\n  exports: [PaginatorComponent]\n})\nexport class NgxPaginatorModule { }\n"],"names":[],"mappings":";;;;;;;AAAA;IAOE;KAAiB;;gBALlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;2BAJD;;;;;;;ACAA;IA8CE;oBAJiB,IAAI,YAAY,EAAE;yBACvB,CAAC;KAGI;IARjB,sBAAc,sCAAM;;;;QAApB,cAAwB,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE;;;;;QACpC,UAAW,KAAa,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,KAAK,CAAE,EAAE;;;OADjB;IAE9C,sBAAc,wCAAQ;;;;QAAtB,cAA0B,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;;;;;QACxC,UAAa,KAAa,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,EAAE;;;OADhB;;;;IAQlD,qCAAQ;;;IAAR;KACC;IACD,sBAAI,qCAAK;;;;QAAT,cAAa,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE;;;OAAA;;;;;;;IACvF,0CAAa;;;;;;IAAb,UAAe,SAAiB,EAAE,QAAgB,EAAE,MAAc;QAChE,IAAI,MAAM,KAAK,CAAC,IAAI,QAAQ,KAAK,CAAC,EAAE;YAAE,OAAO,UAAQ,MAAQ,CAAC;SAAE;QAEhE,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;;QAE7B,IAAM,UAAU,GAAG,SAAS,GAAG,QAAQ,CAAC;;QAGxC,IAAM,QAAQ,GAAG,UAAU,GAAG,MAAM;YAChC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,QAAQ,EAAE,MAAM,CAAC;YACvC,UAAU,GAAG,QAAQ,CAAC;QAE1B,OAAU,UAAU,GAAG,CAAC,WAAM,QAAQ,YAAO,MAAQ,CAAC;KACvD;;;;;IACD,qCAAQ;;;;IAAR,UAAS,CAAC,IAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,EAAC;;;;;;IAE1B,4CAAe;;;;IAAf;QACE,OAAO,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC;KACnD;;;;;;IAED,wCAAW;;;;IAAX;;QACE,IAAM,aAAa,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC9C,OAAO,IAAI,CAAC,SAAS,GAAG,aAAa,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC;KAC9D;;;;;;IAED,6CAAgB;;;;IAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;KACnD;;;;;;IAEH,qCAAQ;;;;IAAR;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAAE,OAAO;SAAE;;QAEpC,IAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;KACxC;;;;;;IAGD,yCAAY;;;;IAAZ;QACE,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;YAAE,OAAO;SAAE;;QAExC,IAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;KACxC;;;;;IACO,2CAAc;;;;cAAC,iBAAyB;QAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,iBAAiB,mBAAA;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;;;;;;IAEL,4CAAe;;;;IAAf,UAAgB,QAAgB;;QAG9B,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;;QAClD,IAAM,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QAEzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;KACxC;;gBA/GF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,8+CA8BT;;iBAEF;;;;;yBAEE,KAAK;2BAEL,KAAK;uBAEL,MAAM;;6BA1CT;;;;;;;ACAA;;;;gBAKC,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,iBAAiB;qBAClB;oBACD,YAAY,EAAE,CAAC,kBAAkB,CAAC;oBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;iBAC9B;;6BAXD;;;;;;;;;;;;;;;"}
